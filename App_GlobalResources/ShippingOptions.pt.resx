<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DHL2D" xml:space="preserve">
    <value>Segundo dia da DHL</value>
  </data>
  <data name="DHLEXA" xml:space="preserve">
    <value>DHL Próxima Tarde</value>
  </data>
  <data name="DHLEXM" xml:space="preserve">
    <value>DHL Express 10:30</value>
  </data>
  <data name="DHLEXP" xml:space="preserve">
    <value>DHL Express</value>
  </data>
  <data name="DHLGND" xml:space="preserve">
    <value>DHL Ground</value>
  </data>
  <data name="DHLWPE" xml:space="preserve">
    <value>DHL Worldwide Priority Express</value>
  </data>
  <data name="FDX2D" xml:space="preserve">
    <value>FEDEX 2 Dia</value>
  </data>
  <data name="FDXES" xml:space="preserve">
    <value>FEDEX Express Saver</value>
  </data>
  <data name="FDXFO" xml:space="preserve">
    <value>FEDEX Primeira noite</value>
  </data>
  <data name="FDXGND" xml:space="preserve">
    <value>Terreno FEDEX</value>
  </data>
  <data name="FDXHD" xml:space="preserve">
    <value>Entrega em domicílio FEDEX</value>
  </data>
  <data name="FDXIE" xml:space="preserve">
    <value>Economia Internacional FEDEX</value>
  </data>
  <data name="FDXIF" xml:space="preserve">
    <value>FEDEX Internacional Primeiro</value>
  </data>
  <data name="FDXIGND" xml:space="preserve">
    <value>Terreno Internacional FEDEX</value>
  </data>
  <data name="FDXIP" xml:space="preserve">
    <value>Prioridade Internacional FEDEX</value>
  </data>
  <data name="FDXPO" xml:space="preserve">
    <value>Prioridade FEDEX Overnight</value>
  </data>
  <data name="FDXPOS" xml:space="preserve">
    <value>Entrega prioritária durante a noite no sábado pela FEDEX</value>
  </data>
  <data name="FDXSO" xml:space="preserve">
    <value>Pernoite padrão FEDEX</value>
  </data>
  <data name="UPS2DE" xml:space="preserve">
    <value>UPS Air Day 2 AM (apenas destinos comerciais)</value>
  </data>
  <data name="UPS2ND" xml:space="preserve">
    <value>2nd Day Air</value>
  </data>
  <data name="UPS3DS" xml:space="preserve">
    <value>Seleção de 3 dias da UPS</value>
  </data>
  <data name="UPSCAN" xml:space="preserve">
    <value>Padrão UPS Canadá</value>
  </data>
  <data name="UPSGND" xml:space="preserve">
    <value>Terra da UPS</value>
  </data>
  <data name="UPSNDA" xml:space="preserve">
    <value>UPS no dia seguinte</value>
  </data>
  <data name="UPSNDAS" xml:space="preserve">
    <value>Entrega no sábado no dia seguinte da UPS</value>
  </data>
  <data name="UPSNDE" xml:space="preserve">
    <value>UPS no dia seguinte cedo da manhã</value>
  </data>
  <data name="UPSNDS" xml:space="preserve">
    <value>Economia no dia seguinte da UPS</value>
  </data>
  <data name="UPSWEP" xml:space="preserve">
    <value>Expedido mundialmente pela UPS</value>
  </data>
  <data name="UPSWEX" xml:space="preserve">
    <value>UPS Worldwide Express</value>
  </data>
  <data name="UPSWSV" xml:space="preserve">
    <value>UPS Worldwide Saver</value>
  </data>
  <data name="USPBPM" xml:space="preserve">
    <value>USPS encadernado / impresso</value>
  </data>
  <data name="USPEMI" xml:space="preserve">
    <value>USPS Express Mail International</value>
  </data>
  <data name="USPEXP" xml:space="preserve">
    <value>USPS Express Mail</value>
  </data>
  <data name="USPFC" xml:space="preserve">
    <value>Correio de primeira classe do USPS</value>
  </data>
  <data name="USPFCI" xml:space="preserve">
    <value>USPS First Class International</value>
  </data>
  <data name="USPGXG" xml:space="preserve">
    <value>Global Express USPS garantido</value>
  </data>
  <data name="USPLIB" xml:space="preserve">
    <value>Biblioteca USPS</value>
  </data>
  <data name="USPMM" xml:space="preserve">
    <value>USPS Media Mail</value>
  </data>
  <data name="USPPM" xml:space="preserve">
    <value>Correio prioritário do USPS</value>
  </data>
  <data name="USPPMI" xml:space="preserve">
    <value>USPS Correio Prioritário Internacional</value>
  </data>
  <data name="USPPP" xml:space="preserve">
    <value>USPS Parcel Post</value>
  </data>
</root>