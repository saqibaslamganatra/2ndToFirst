@model Invoice
@*This view exists in both the Account and Admin view folders, be sure you're editing the correct one*@
@{ 
    string returnUrl = Request.Url.PathAndQuery;
    var currentAction = (string)ViewContext.RouteData.Values["action"];
    var currentController = (string)ViewContext.RouteData.Values["controller"];
    var savedStripeCards = Html.GetStripeCards(Model);
}
<script>
    $(document).ready(function () {

        @if (Model.Type == InvoiceTypes.Fee)
        {
            <text>
            Stripe.setPublishableKey('@SiteClient.TextSetting(SiteProperties.StripeConnect_SiteFeesPublishableApiKey).ToJavascriptSafeString()');
            </text>
        }
        else
        {
            <text>
            Stripe.setPublishableKey('@Model.Owner.Properties.Single(p => p.Field.Name == StdUserProps.StripeConnect_SellerPublishableApiKey).Value.ToJavascriptSafeString()');
            </text>
        }

        var $form = $("#CheckoutForm");
        $form.submit(function (event) {
            if ($("#AddNewCC:checked").length > 0) {
                // Disable the submit button to prevent repeated clicks:
                $form.find("#CompletePaymentButton").prop("disabled", true);

                // Request a token from Stripe:
                Stripe.card.createToken($form, stripeResponseHandler);
                // Prevent the form from being submitted:
                return false;
            }
        });

        function stripeResponseHandler(status, response) {
            // Grab the form:
            var $form = $("#CheckoutForm");

            if (response.error) { // Problem!

                // Show the errors on the form:
                $form.find('.payment-errors').text(response.error.message);
                $form.find("#CompletePaymentButton").prop('disabled', false); // Re-enable submission

            } else { // Token was created!

                // Get the token ID:
                var token = response.id;

                // Insert the token ID into the form so it gets submitted to the server:
                $form.append($('<input type="hidden" name="@Fields.StripeToken">').val(token));

                // Submit the form:
                $form.get(0).submit();
            }
        };

        //Make sure at least one of the options is checked
        if ($("input[name='@Fields.SelectedStripeCardId']:checked").length == 0) {
            $("input[name='@Fields.SelectedStripeCardId']").first().attr("checked", "checked");
        }

        //Initially hides extra "New" options if an "Existing" option is checked
        if ($("input.ExstCcOpt:checked").length > 0) {
            $("div.ShowOnNewOnly").hide();
        }

        //When any option is clicked, toggle extra "New" options as needed
        $("input[name='@Fields.SelectedStripeCardId']").change(function () {
            if ($("#AddNewCC:checked").length > 0) {
                $("div.ShowOnNewOnly").show();
            } else {
                $("div.ShowOnNewOnly").hide();
            }
        });

        //When any "New" details are entered, automatically check the "New" radio button
        $(".OnChangeCheckNew").change(function () {
            $("#AddNewCC").attr("checked", "checked").change();
        });

    });
</script>

<div class="col-xs-12 col-sm-6">
    <div class="payment-method clearfix">
        <a class="btn btn-info btn-block" role="button" href="#CCCheckout" data-toggle="collapse"> @Html.GlobalResource("CheckoutWithCreditCard") <span class="glyphicon glyphicon-chevron-right"></span></a>
    </div>
    <div class="collapse" id="CCCheckout">
        @if (true)//Model.Total >= 0.50M)
        {
            <div class="payment-method clearfix">
                @using (Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @id = "CheckoutForm" }))
                {
                    <span class="payment-errors"></span>
                    @Html.Hidden("provider", ViewData["ProviderName"])

                    <div class="form-horizontal">

                        @if (savedStripeCards.Count() > 0)
                        {
                            <strong>@Html.GlobalResource("SelectFromExistingCC")</strong>
                            <hr />
                        }
                        @foreach (var stripeCard in savedStripeCards)
                        {
                            <div class="radio">
                                <label>
                                    @Html.RadioButton(Fields.SelectedStripeCardId, stripeCard.Id, false, new { @class = "ExstCcOpt" })
                                    @stripeCard.Brand
                                    &nbsp; &nbsp; xxxx-@stripeCard.Last4 &nbsp; &nbsp; @stripeCard.ExpirationMonth/@stripeCard.ExpirationYear.ToString().Right(2)
                                    &nbsp; &nbsp;
                                    @Html.ActionLink(Html.GlobalResourceString("Remove"), MVC.DeleteCardAction, MVC.StripeController,
                                        new { invoiceID = Model.ID, cardID = stripeCard.Id, returnUrl },
                                        new { @class = "btn btn-default btn-xs hidden-xs" })
                                </label>
                            </div>
                        }

                        <div class="radio">
                            <label>
                                @Html.RadioButton(Fields.SelectedStripeCardId, 0, false, new { @id = "AddNewCC" })
                                <strong>@Html.GlobalResource("NewCreditCard")</strong>
                            </label>
                            <p>&nbsp;</p>
                        </div>
                        <div class="ShowOnNewOnly">
                            @*<div class="form-group">
                                <label class="col-xs-1 control-label"><span class="glyphicon glyphicon-credit-card"></span></label>
                                <div class="col-xs-11">
                                    @(Html.DropDownList(Fields.CardType
                        , (IEnumerable<SelectListItem>)ViewData[Fields.CreditCardTypes]
                        , Html.GlobalResourceString("PleaseSelect")
                        , new { @class = "CreditCardType OnChangeCheckNew form-control" }))
                                </div>
                            </div>*@
                            <div class="form-group">
                                <label class="col-xs-1 control-label"><strong style="font-size: larger">#</strong></label>
                                <div class="col-xs-11">
                                    <input data-stripe="number" type="text" class="CreditCardNumber OnChangeCheckNew form-control" placeholder="@Html.GlobalResource("CardNumber")" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-xs-1 control-label"><span class="glyphicon glyphicon-calendar"></span></label>
                                <div class="col-xs-5">
                                    @*@Html.MonthDropDownList(Fields.ExpirationMonth, " ", new { @class = "CreditCardExpMonth OnChangeCheckNew form-control" })*@
                                    <select data-stripe="exp_month" class="CreditCardExpMonth OnChangeCheckNew form-control">
                                        <option value=""> </option>
                                        @foreach (var monthOption in Html.MonthOptions())
                                        {
                                            <option value="@monthOption.Value">@monthOption.Text</option>
                                        }
                                    </select>
                                    <span class="help-block">@Html.GlobalResource("Month")</span>
                                </div>
                                <div class="col-xs-6">
                                    @*@Html.YearDropDownList(Fields.ExpirationYear, " ", new { @class = "CreditCardExpYear OnChangeCheckNew form-control" })*@
                                    <select data-stripe="exp_year" class="CreditCardExpYear OnChangeCheckNew form-control">
                                        <option value=""> </option>
                                        @foreach (var yearOption in Html.YearOptions())
                                        {
                                            <option value="@yearOption.Value">@yearOption.Text</option>
                                        }
                                    </select>
                                    <span class="help-block">@Html.GlobalResource("Year")</span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-xs-1 control-label"><span class="glyphicon glyphicon-lock"></span> </label>
                                <div class="col-xs-9">
                                    @*@Html.TextBox(Fields.VerificationCode, string.Empty, new { @class = "CreditCardCVV OnChangeCheckNew form-control", placeholder = @Html.GlobalResource("VerificationCode") })*@
                                    <input data-stripe="cvc" type="text" class="CreditCardCVV OnChangeCheckNew form-control" placeholder="@Html.GlobalResource("VerificationCode")" />
                                </div>
                                <div class="col-xs-1">
                                    @Html.ToolTipButton("CVV_Help")
                                </div>
                            </div>
                            <div class="col-xs-11 col-xs-offset-1">@Html.ToolTipContent("CVV_Help", Html.GlobalResource("CVV_Help"))</div>
                        
                            @if (ViewData["PayerBillingAddressId"] == null)
                            {
                                <div class="form-group">
                                    <label class="col-sm-5 control-label required">@Html.GlobalResource("BillingAddress")</label>
                                    <div class="col-sm-7">

                                        @{
                                bool isFirstOpt = true;
                                foreach (Address address in (IEnumerable<Address>)ViewData[MVC.ViewData_AddressList])
                                {

                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            @Html.RadioButton("AddressID", address.ID, isFirstOpt)
                                        </span>
                                        <button disabled="disabled" class="btn btn-default text-left">
                                            @Html.Partial("Address", address)
                                        </button>
                                    </div>
                                            <p></p>

                                    isFirstOpt = false;
                                }
                                        }
                                        @Html.ButtonLink(Html.GlobalResource("AddNewAddress"), MVC.CreateAddressAction, null, null, new { @class = "btn btn-default btn-xs" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.Hidden("AddressID", ViewData["PayerBillingAddressId"])
                            }
                            <div class="form-group">
                                <div class="col-xs-10 col-xs-offset-2 checkbox">
                                    @Html.CheckBox(Fields.SaveNewStripeCard, true)
                                    <label for="@Fields.SaveNewStripeCard">
                                        @Html.GlobalResource("SaveNewCardInformation")
                                    </label>
                                </div>
                            </div>
                        </div>

                        <input type="submit" id="CompletePaymentButton" class="btn btn-success btn-block" value="@Html.GlobalResource("PayWithCreditCard")" />

                    </div>

                    <input type="hidden" data-stripe="name" value="@(Model.BillingFirstName + " " + Model.BillingLastName)" />
                    <input type="hidden" data-stripe="address_line1" value="@Model.BillingStreet1" />
                    <input type="hidden" data-stripe="address_line2" value="@Model.BillingStreet2" />
                    <input type="hidden" data-stripe="address_city" value="@Model.BillingCity" />
                    <input type="hidden" data-stripe="address_state" value="@Model.BillingStateRegion" />
                    <input type="hidden" data-stripe="address_zip" value="@Model.BillingZipPostal" />
                    <input type="hidden" data-stripe="address_country" value="@Model.BillingCountry" />
                }
                @*<p class="text-center">
                    &nbsp;<br />
                    @Html.ButtonLink(Html.GlobalResource("ManageExistingCC"), "CreditCards", "Account", null, new { @class = "btn btn-link" })
                </p>*@
            </div>
        }
        else
        {
            <div class="payment-method clearfix alert alert-warning">
                @Html.GlobalResource("CreditCardCheckoutAvailableForInvoiceTotalsOfXandAbove", "$0.50")
            </div>
        }
    </div>
</div>
