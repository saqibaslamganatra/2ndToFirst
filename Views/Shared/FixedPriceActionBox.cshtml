@model Listing

<script>
    function checkValues() {
        if ($("#Quantity").val() == "") {
            console.log("missing QTY: aborting...");
            return false;
        } else {
            return true;
        }
    }
</script>
<div class="col-xs-12 col-sm-6 watching__wrapper">
    @Html.Partial("ListingDetail_AddWatch")
</div>

<div class="detail__submit-wrapper">
    <div class="detail__price">
        <span class="detail__price-text"><strong>@Html.Resource("FixedPriceListing, Price")</strong></span>
        <span class="detail__price--current awe-rt-CurrentPrice">
            @* do not remove this span, it gets populated via ajax *@
            @Html.LocalCurrencyWithNumberTags(Model.CurrentPrice.Value, Model.Currency.Code)
            <input type="hidden" value="@Convert.ToDecimal(string.Format("{0:F2}", Model.CurrentPrice.Value))" id="hdnOriginalPrice" />
        </span>
        @if (Model.CurrentQuantity > 1)
        {
<span class="detail__each">
    @Html.Resource("FixedPriceListing, PerItem")
</span>}
        <span id="convertedprice" class="awe-hidden">
            (<span class="Bidding_Local_Price" data-currency="@Model.Currency.Code">
                @* do not remove this span, it gets populated via AJAX *@
                @if (Model.Currency.Code != Html.GetCookie("currency"))
                {
    @Html.LocalCurrencyWithNumberTags(Model.CurrentPrice.Value.ConvertAmount(Model.Currency.Code, Html.GetCookie("currency")), Html.GetCookie("currency"))}
            </span>)
        </span>
        <div class="" id="dvShippingCost" style="display:none">
            <span class="detail__price-text"><strong>@Html.Resource("FixedPriceListing, Shipping")</strong></span>
            <span class="detail__price--current Bidding_Current_Price awe-rt-CurrentPrice" id="ShippingCost">

            </span>
        </div>
        <div class="" id="dvTotalCost" style="display:none">
            <span class="detail__price-text"><strong>@Html.Resource("FixedPriceListing, Total")</strong></span>
            <span class="detail__price--current Bidding_Current_Price awe-rt-CurrentPrice" id="TotalCost">
                <input type="hidden" value="@Convert.ToDecimal(string.Format("{0:F2}", Model.CurrentPrice.Value));" id="hdnTotPrice" />
            </span>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-6">
            <div class="form-group">
                @if (Model.CurrentQuantity > 99)
                {
    <div class="input-group">
        <span class="input-group-addon">@Html.Resource("FixedPriceListing, Quantity")</span>
        @Html.TextBox("Quantity", 1, new { @class = "form-control", min = "1" })
    </div> }
                else
                {
    @Html.DropDownList("Quantity", Enumerable.Range(1, Model.CurrentQuantity).Select(i =>
             new SelectListItem
             {
                 Text = Html.Resource("FixedPriceListing, Quantity") + " : " + i.ToString(),
                 Value = i.ToString()
             }),
             new { @class = "form-control", id = "Quantity", name = "Quantity" })}
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-success btn-block" onclick="return checkValues()" value="@Html.Resource("FixedPriceListing, BuyNow")" />
            </div>
            @{ bool makeOfferAvailable = false; }
            @if (Model.Properties.Any(lp => lp.Field.Name == Fields.MakeOfferAvailable && bool.TryParse(lp.Value, out makeOfferAvailable) && makeOfferAvailable))
            {
<div class="form-group">
    <div class="text-or"><span>@Html.GlobalResource("Or")</span></div>
    <button type="submit" class="btn btn-default btn-block" name="MakeOffer" id="MakeOffer">@Html.Resource("FixedPriceListing, MakeOffer")</button>
</div>            }
            <div class="detail__disclaimer">@Html.Resource("FixedPriceListing, FixedPriceDisclaimer")</div>

            @*   <div class="detail__qty-total">
                    @Html.Resource("FixedPriceListing, QuantityAvailable")
                    <span class="awe-rt-Quantity detail__qty-num">@Html.LocalInteger(Model.CurrentQuantity)</span>

                </div>
            *@


            @{ if (Model.Status.Equals(ListingStatuses.Active) && !Model.IsGoodTilCanceled())
                            {
                <div class="detail__show-time awe-rt-Hide">

                    <strong>
                        @Html.GlobalResource("RemainingTime")
                    </strong>
                    <span class="detail__time" data-epoch="ending" data-end-hide-selector="[data-listingid='@Model.ID'] .awe-rt-Hide" data-action-time="@Html.CultureInvariantLocalDTTM(Model.EndDTTM.Value)">
                        @Html.RemainingTime(Model.EndDTTM.Value)
                    </span>

                </div> }
                            else if (Model.Status.Equals(ListingStatuses.Pending) || Model.Status.Equals(ListingStatuses.Preview))
                            {
                                if (!Model.IsGoodTilCanceled())
                                {
                <div class="detail__show-time awe-rt-Remaining">

                    <strong>
                        @Html.GlobalResource("RemainingTime"):
                    </strong>
                    <span class="detail__time" data-epoch="ending" data-end-hide-selector="[data-listingid='@Model.ID'] .awe-rt-Remaining" data-action-time="@Html.CultureInvariantLocalDTTM(Model.EndDTTM.Value)">
                        @Html.RemainingTime(Model.EndDTTM.Value)
                    </span>
                </div> }
                            } }
        </div>

        <div class="col-xs-12 col-sm-6">
            <div class="detail__properties" style="margin-left: 4%;">

                @if (User.Identity.IsAuthenticated)
                {
                    if (Model.AcceptedListingActionCount() > 0)
                    {
    <a href="@Url.Action(MVC.HistoryAction, new { id = Model.ID, currency = Model.Currency.Code })" class="detail__action-link"><span class="glyphicon glyphicon-tag"></span> @Html.Resource("FixedPriceListing, PurchaseHistory")</a> }
                    else
                    {
    <a href="@Url.Action(MVC.HistoryAction, new { id = Model.ID, currency = Model.Currency.Code })" class="detail__action-link awe-hidden PurchaseHistoryButton"><span class="glyphicon glyphicon-tag"></span> @Html.Resource("FixedPriceListing, PurchaseHistory")</a>}
                }

                <div class="fee">

                    @{ decimal buyersPremiumPct = 0;
                                    if (Model.Owner.Properties.Any(p => p.Field.Name == StdUserProps.BuyersPremiumPercent))
                                    {
                                        decimal.TryParse(Model.Owner.Properties.First(p => p.Field.Name == StdUserProps.BuyersPremiumPercent).Value,
                                                         out buyersPremiumPct);
                                    }
                                    if (buyersPremiumPct > 0)
                                    {
                        <div class="detail__fee-heading">
                            @Html.GlobalResource("BuyersPremium")
                        </div>
                                        <div class="detail__buyer-premium">@Html.GlobalResource("Plus_Xpct_BuyersPremium", (buyersPremiumPct / 100).ToString("P"))</div> } }

                    @Html.Partial("BuyerFee")

                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $("#AjaxLoader").click(function () {
            if (confirm("Are you sure you want to stop the loader? ")) {
                $('#AjaxLoader').hide();
                $("input:text").val('');
                $("select#ddlShipCountryList")[0].selectedIndex = 0;
                $('#ErrorGripList').css('display', 'none');
                $("#CloseDhl").trigger("click");
            }
        });

        $('.ipt').on('input propertychange change keyup paste mouseup', function () {
            if ($(this).val() == "") {
                $(this).css("border", "1px solid red");
                $(this).addClass("input-validation-error");
            }
            else {
                $(this).css("border", "1px solid black");
                $(this).removeClass("input-validation-error");
            }
        });

    });
    @{
        var sellerInformation = @ViewData["SellerInformation"]  as Address;

        var buyerInformation =  @ViewData["LoggingUser"] as Address;

        string CountryCode = @sellerInformation.Country.Code;
        string ZipPostalCode = @sellerInformation.ZipPostal;
        string City = @sellerInformation.City;



        string BuyerCountryCode = buyerInformation != null ? @buyerInformation.Country.Code : string.Empty;
        string BuyerPostalCode = buyerInformation != null ? @buyerInformation.ZipPostal : string.Empty;
        string BuyerCity = buyerInformation != null ? @buyerInformation.City : string.Empty;

    }
    var SellerCountryCode = "@CountryCode";
    var SellerPostalcode = @ZipPostalCode;
    var SellerCity = "@City";
    var WeightUnit = "";
    var Weight = 0;
    var Height = 0;
    var Length = 0;
    var Width = 0;
    var DimensionUnit = "";
    var obj = JSON.parse("null");

    @*var BuyerCountryCode = "@BuyerCountryCode";
    var BuyerPostalCode = @BuyerPostalCode != null ? @BuyerPostalCode : "";
    var BuyerCity = "@BuyerCity";*@

    $("#Quantity").change(function () {
        var _LoggingUser = JSON.parse('@Html.Raw(Json.Encode(ViewData["LoggingUser"]))');
        var ChangeQuantity = this.value;
        
        var OriginalPrice = $("#hdnOriginalPrice").val();
        var NewPrice = parseFloat(OriginalPrice * ChangeQuantity).toFixed(2);
        $(".NumberPart").text(NewPrice);
        if (_LoggingUser) {
            $('#AjaxLoader').show();
            var BuyerPostalCode = $("#tbPostalCode").val();
            var BuyerCity = $("#tbCityName").val();
            var BuyerCountryCode = $("#ddlShipCountryList").children("option:selected").val();

            GetQuoteFromDhl(BuyerCountryCode, BuyerPostalCode, BuyerCity, SellerCountryCode, SellerPostalcode, SellerCity);
        }
        else {
            $('#AjaxLoader').hide();
        }

    });

    

</script>